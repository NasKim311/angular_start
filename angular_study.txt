npm<node package manager> : 자바스크립트 프로그래밍 언어를 위한 패키지 관리자이다.

------------------------------------------------------------------------------------
<Angular 개발 환경 세팅>

- Node.js 설치 https://nodejs.org/ko
- Vscode 설치 https://code.visualstudio.com/

- Vscode 확장앱 angular 검색 후 최 상단 프로그램 설치

- pwershell에 입력
	- 타입스크립트를 사용하기 위한 라이브러리 설치 : npm install -g typescript
	- 앵큘러 사용하기 위한 명령어 입력 : npm i @angular/cli -g

- 앵귤러 프로젝트 생성 : ng new 프로젝트명
	-> 라우팅 no / css 선택

- 서버 구동(default port : 4200)
	해당 디렉토리로 경로 이동 후 : ng serve --open

------------------------------------------------------------------------------------
<앵귤러 명령어>
	- 프로젝트 합치는 명령어 : ng build
	- 컴포넌트 만드는 명령어 : ng g component 이름

------------------------------------------------------------------------------------
<Angular에서 가장 중요한 개념>
	
	- 모듈(Module) : 각종 설정과 관련된 내용이 존재하는 파일.
			다른 여러 기능들을 사용하기 위한 설정의 역할을 한다.

	- 컴포넌트(Component) : 모듈이 만들어 준 환경에서 동작하여 실제 화면에 관한 내용을 직접적으로 수행하는 파일.
				화면구성 및 각종 이벤트에 대해서 일을 수행하는 일꾼.

------------------------------------------------------------------------------------
<컴포넌트의 구성>
	import { Component } from '@angular/core';

	@Component({
		 //key, value 형식의 내용
	})

	export class MyCustomComponent {
	    //각종 기능들
	}

------------------------------------------------------------------------------------
<컴포넌트 내부의 기능들>
	1) selector
		-> 셀렉터는 컴포넌트의 고유 이름이다.
	2) templateUrl
		-> 해당 컴포넌트에서 사용 할 html 파일의 위치를 의미합니다.
	3) styleUrls
		-> 해당 컴포넌트에서 사용 할 css 파일의 위치를 의미합니다.




------------------------------------------------------------------------------------
<앵귤러의 표현식 {{}}>
	- 앵귤러에서의 표현식 기호는 대괄호 2개를 사용한다.
	- 이 대괄호 2개에 컴포넌트 파일에서 사용한 데이터 이름을 입력하면 html 파일에 나타낼 수 있다.
	- private한 값은 표현할 수 없으며, protected하거나 public한 데이터만 표현합니다.
	- 데이터가 객체(Array, Object 등) 형태는 Object라고 표현하며, 문자 및 숫자, 논리값은 정상적으로 나타낸다.
	- 이러한 앵귤러에서의 표현식은 내부 컴포넌트의 데이터가 변하면 자동으로 변한다.
	- 예를들어, 컴포넌트 내부 변수 title의 데이터가 변하면 html 파일에서 알아서 스스로 변한 값을 적용시켜 줍니다.
	- 이것을 "양방향 데이터 바인딩"이라고 불린다.


------------------------------------------------------------------------------------
<구조 지시자(디렉티브)>
	-> 구조 지시자는 html 태그 안에서 (*)기호 옆에 명령어를 붙여준 뒤, 대입 연산자를 통해 동작할 명령어를 입력합니다.
		구조를 변경 할 때 사용됩니다.

	- *ngFor	: 배열형태의 데이터에 대해 사용한다.
	- *ngIf		: 
	- *ngSwitch	:

------------------------------------------------------------------------------------
<속성 디렉티브>
	-> html요소의 모양, 동작 등을 제어 할 때 사용된다.
	
	- ngClass	: html 태그에 클래스를 이처럼 동적으로 부여 할 때 사용한다.
	- ngStyle	:

------------------------------------------------------------------------------------
[(ngModel)]
	- 디렉티브의 일종으로 input type의 데이터를 묶을 때 사용된다.
	- 컴포넌트의 특정 변수와 컴포넌트html파일에서의 값을 이어주는 역할을 한다.
	- 모튤 파일에 < import { FormsModule } from '@angular/forms'; > 를 import해서 사용할 수 있다.

------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------



















